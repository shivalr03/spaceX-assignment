{"version":3,"sources":["components/details.js","App.js","serviceWorker.js","index.js"],"names":["Details","missionInfo","this","props","shuttleData","map","index","missionName","mission_name","flight_number","className","key","src","links","mission_patch","alt","mission_id","length","missionId","mission_index","launch_year","id","String","launch_success","rocket","first_stage","cores","land_success","Component","App","handleDataFetch","state","selectedYear","isSuccessfulLaunch","isSuccessfulLand","setState","isFilterDataLoading","axios","get","then","response","data","handleFilter","filterNum","yearInfo","launchSuccess","landSuccess","isDetailsLoading","unfilteredData","yearData","individualYear","filter","a","b","indexOf","renObjData","idx","text","variant","onClick","event","type","color","height","width","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ee82098a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Details extends Component {\n    render() {\n        let missionInfo = this.props.shuttleData && this.props.shuttleData.map((missionInfo, index) => {\n            // Handling Dynamic render of Mission Information\n            let missionName = missionInfo.mission_name + \" #\"+ missionInfo.flight_number;\n            return(\n                <div className=\"cardStack__box\" key={index}>\n                    <div className=\"cardStack__box_img\">\n                        <img src={missionInfo.links.mission_patch} alt=\"\" />\n                    </div>\n                    <div className=\"cardStack__box_content\" key={index}>\n                        <h2 className=\"box-title\">{missionName}</h2>\n                        <div className=\"missionId\">\n                            Mission Ids:\n                            { missionInfo.mission_id.length === 0 ? <div className=\"list\"><li>N/A</li></div> :\n                                missionInfo.mission_id.map((missionId, mission_index) => {\n                                    return(\n                                        <div className=\"list\" key={mission_index}>\n                                            <ul>\n                                                <li>{missionId}</li>\n                                            </ul>\n                                        </div>\n                                    );\n                                })}\n                        </div>\n                            <p className=\"LaunchYear\">Launch Year:<span>{missionInfo.launch_year}</span></p>\n                            <p className=\"sucessLaunch\" id={index}>Sucessful Launch :<span>{String(missionInfo.launch_success)}</span></p>\n                        <p className=\"sucessLand\">\n                            Sucessful Landing :<span>{String(missionInfo.rocket.first_stage.cores[0].land_success)}</span>\n                        </p>\n                    </div>\n                </div>\n            )\n        });\n        return (\n            <div className=\"cardStack\">\n                {missionInfo}\n            </div>\n        )\n    }\n}\n\nexport default Details;\n","import React from 'react';\nimport Details from './components/details';\nimport axios from \"axios\";\nimport Button from \"terra-button\";\nimport Loader from 'react-loader-spinner'\nimport './App.scss';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      shuttleData: null,\n      isDetailsLoading: true,\n      selectedYear: '',\n      isSuccessfulLaunch: '',\n      isSuccessfulLand: '',\n      isFilterDataLoading: '',\n      unfilteredData: null,\n\n    }\n  }\n\n  componentDidMount() {\n    // Initial Call\n    axios.get(\"https://api.spacexdata.com/v3/launches?limit=100\", {})\n      .then((response) => {\n        this.setState({ shuttleData: response.data, unfilteredData: response.data, isDetailsLoading: false })\n      });\n  }\n\n  handleDataFetch = () => {\n    //Launch Success Filter\n    if (this.state.selectedYear === '' && this.state.isSuccessfulLaunch && (this.state.isSuccessfulLand === false || this.state.isSuccessfulLand === '')) {\n      this.setState({\n        isFilterDataLoading: true\n      });\n      axios.get(\"https://api.spacexdata.com/v3/launches?limit=100&launch_success=true\", {})\n        .then((response) => {\n          this.setState({ shuttleData: response.data, isFilterDataLoading: false })\n        });\n    }\n\n    //Launch & Land Filter\n    if (this.state.selectedYear === '' && this.state.isSuccessfulLaunch && this.state.isSuccessfulLand) {\n      this.setState({\n        isFilterDataLoading: true\n      });\n      axios.get(\"https://api.spacexdata.com/v3/launches?limit=100&launch_success=true&land_success=true\", {})\n        .then((response) => {\n          this.setState({ shuttleData: response.data, isFilterDataLoading: false })\n        });\n    }\n\n    //All Filter\n    if (this.state.selectedYear !== '' && this.state.isSuccessfulLaunch && this.state.isSuccessfulLand) {\n      this.setState({\n        isFilterDataLoading: true\n      });\n      axios.get(`https://api.spacexdata.com/v3/launches?limit=100&launch_success=true&land_success=true&launch_year=${this.state.selectedYear}`, {})\n        .then((response) => {\n          this.setState({ shuttleData: response.data, isFilterDataLoading: false })\n        });\n    }\n  }\n\n  handleFilter = (filterNum, yearInfo, launchSuccess, landSuccess) => {\n    //Checking which filter is selected at a particular time depending on the filter number\n    if (filterNum === 1) {\n      // Data Filter Altered\n      this.setState({\n        selectedYear: this.state.selectedYear === yearInfo ? '' : yearInfo\n      }, () => {\n        this.handleDataFetch();\n      });\n    }\n    else if (filterNum === 2) {\n      // Successful Launch Filter Altered\n      this.setState({\n        isSuccessfulLaunch: launchSuccess\n      }, () => {\n        this.handleDataFetch();\n      });\n    }\n    else {\n      // Successful Land Filter Altered\n      this.setState({\n        isSuccessfulLand: landSuccess\n      }, () => {\n        this.handleDataFetch();\n      });\n    }\n  }\n\n\n\n  render() {\n\n    let yearData = this.state.unfilteredData && this.state.unfilteredData.map((data, index) => {\n      return data.launch_year;\n    });\n    let individualYear = yearData && yearData.filter((a, b) => yearData.indexOf(a) === b);\n    let renObjData = individualYear && individualYear.map((yearInfo, idx) => {\n      // Handling Dynamic render of Year Options\n      return (\n        <Button\n          key={idx}\n          text={yearInfo}\n          variant=\"emphasis\"\n          className={this.state.selectedYear === yearInfo ? \"year active\" : \"year\"}\n          onClick={(event) => { this.handleFilter(1, yearInfo, this.state.isSuccessfulLaunch, this.state.isSuccessfulLand) }}\n        />\n      );\n    });\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>SpaceX Launch Programs</h1>\n        </header>\n        <main>\n          {/* Displaying Loader when fetching data during initial render */}\n          {this.state.isDetailsLoading ? <Loader type=\"Oval\" className=\"centered\" color=\"#00BFFF\" height={60} width={60} /> :\n            <article>\n              <div className=\"menu\">\n                <div className=\"container\">\n                  <h3 className=\"filter\">Filter</h3>\n\n                  <div className=\"filterOne\">\n                    <h4 className=\"dateHead\">Launch Year</h4>\n                    <div className=\"years\">\n                      {renObjData}\n                    </div>\n                  </div>\n\n                  <div className=\"filterTwo\">\n                    <h4 className=\"SuccessHead\">SuccessFul Launch</h4>\n                    <div className=\"years\">\n                      <Button\n                        text=\"True\"\n                        variant=\"emphasis\"\n                        className={this.state.isSuccessfulLaunch === '' ? \"year\" : this.state.isSuccessfulLaunch ? \"year active\" : \"year\"}\n                        onClick={(event) => { this.handleFilter(2, this.state.selectedYear, true, this.state.isSuccessfulLand) }}\n                      />\n\n                      <Button\n                        text=\"False\"\n                        variant=\"emphasis\"\n                        className={this.state.isSuccessfulLaunch === '' ? \"year\" : this.state.isSuccessfulLaunch ? \"year\" : \"year active\"}\n                        onClick={(event) => { this.handleFilter(2, this.state.selectedYear, false, this.state.isSuccessfulLand) }}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"filterThree\">\n                    <h4 className=\"SuccessHead\">SuccessFul Landing</h4>\n                    <div className=\"years\">\n                      <Button\n                        text=\"True\"\n                        variant=\"emphasis\"\n                        className={this.state.isSuccessfulLand === '' ? \"year\" : this.state.isSuccessfulLand ? \"year active\" : \"year\"}\n                        onClick={(event) => { this.handleFilter(3, this.state.selectedYear, this.state.isSuccessfulLaunch, true) }}\n                      />\n\n                      <Button\n                        text=\"False\"\n                        variant=\"emphasis\"\n                        className={this.state.isSuccessfulLand === '' ? \"year\" : this.state.isSuccessfulLand ? \"year\" : \"year active\"}\n                        onClick={(event) => { this.handleFilter(3, this.state.selectedYear, this.state.isSuccessfulLaunch, false) }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Displaying Loader during Filter Data Fetch */}\n              {this.state.isFilterDataLoading ? <Loader type=\"Oval\" className=\"centered\" color=\"#00BFFF\" height={60} width={60} /> :\n                <Details shuttleData={this.state.shuttleData} />}\n            </article>}\n        </main>\n        <footer>\n          <h4 className=\"content\">Developed by <span>Shiva Karthik</span></h4>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}